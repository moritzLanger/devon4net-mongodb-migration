version: "3.10"
services:
  dotnet-backend:
    container_name: net
    build: 
      context: ./Templates/WebAPI
      dockerfile: ./Devon4Net.Application.WebAPI/Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=Production
      - DOTNET_ENVIRONMENT=Production
      - ASPNETCORE_HOST=Production
    networks:
      backend-net:
        aliases: [backend]
      database-net:
        aliases: [mtsmongo]
    ports:
      - 8081:8081
    depends_on:
      - mongodatabase
    links:
      - "mongodatabase:database"

  frontend:
    container_name: angular
    build: 
      context: ./FrontEnd
    networks:
      backend-net:
        aliases: [backend]

  reverse-proxy:
    build: ./ReverseProxy
    restart: always
    container_name: 'mts_reverse_proxy'
    ports:
      - 8080:80
    networks:
      backend-net:
        aliases: [backend]
        
  mongodatabase:
    container_name: mongodatabase
    build: ./Database/MongoDB
    restart: always
    environment:
      - MONGO_INITDB_ROOT_USERNAME=sa
      - MONGO_INITDB_DATABASE=mts
      - MONGO_INITDB_ROOT_PASSWORD=C@pgemini2017
    networks:
        database-net:
          aliases: [mtsmongo]
    ports:
      - 27017:27017
    volumes:
      - mongodb-volume:/data/db
      - ./Database/MongoDB/mongorestore.sh:/docker-entrypoint-initdb.d/mongorestore.sh:ro

networks:
  backend-net:
    driver: bridge
  database-net:
    driver: bridge

volumes:
  mssql-volume:
  mongodb-volume: